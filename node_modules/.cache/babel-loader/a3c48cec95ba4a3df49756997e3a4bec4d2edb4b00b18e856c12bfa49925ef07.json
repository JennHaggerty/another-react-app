{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst conditionalRenderPropTypes = {\n  children: PropTypes.array.isRequired,\n  isShown: PropTypes.bool.isRequired\n};\nexport const ConditionalRender = _ref => {\n  let {\n    children,\n    isShown\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isShown && {\n      children\n    }\n  }, void 0, false);\n};\n_c = ConditionalRender;\nConditionalRender.propTypes = conditionalRenderPropTypes;\nexport default ConditionalRender;\nvar _c;\n$RefreshReg$(_c, \"ConditionalRender\");","map":{"version":3,"names":["React","PropTypes","conditionalRenderPropTypes","children","array","isRequired","isShown","bool","ConditionalRender","propTypes"],"sources":["/Users/jenn/Code/projects/jenniferhaggerty_webdev_myspace2004/src/shared/conditionalRender.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst conditionalRenderPropTypes = {\n  children: PropTypes.array.isRequired,\n  isShown: PropTypes.bool.isRequired,\n}\n\nexport const ConditionalRender = ({\n  children,\n  isShown,\n}) => {\n  return (\n    <>\n    {isShown && (\n      {children}\n    )}\n    </>\n  )\n}\n\nConditionalRender.propTypes = conditionalRenderPropTypes;\n\nexport default ConditionalRender;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAAC;AAAA;AAEnC,MAAMC,0BAA0B,GAAG;EACjCC,QAAQ,EAAEF,SAAS,CAACG,KAAK,CAACC,UAAU;EACpCC,OAAO,EAAEL,SAAS,CAACM,IAAI,CAACF;AAC1B,CAAC;AAED,OAAO,MAAMG,iBAAiB,GAAG,QAG3B;EAAA,IAH4B;IAChCL,QAAQ;IACRG;EACF,CAAC;EACC,oBACE;IAAA,UACCA,OAAO,IACN;MAACH;IAAQ;EACV,iBACE;AAEP,CAAC;AAAA,KAXYK,iBAAiB;AAa9BA,iBAAiB,CAACC,SAAS,GAAGP,0BAA0B;AAExD,eAAeM,iBAAiB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}